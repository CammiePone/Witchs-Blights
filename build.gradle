plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

def ENV = System.getenv()
def buildTime = ENV.BUILD_TIME ?: new Date().format('yyyyMMddHHmmss')
boolean isPreviewBuild = !ENV.TAG || ENV.TAG.matches(".+-.+")
def buildNumber = !ENV.TAG ? ("${ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : buildTime}") : ""

version = (ENV.TAG ?: "${project.minecraft_version}-development") + ((isPreviewBuild && !ENV.TAG) ? "+${buildNumber}" : "")
group = project.maven_group
archivesBaseName = project.archives_base_name

repositories {
	maven {
		name = "Ladysnake Mods"
		url = "https://maven.ladysnake.org/releases"
	}
	maven {
		url = "https://maven.uuid.gg/releases"
	}
	maven {
		url = "https://nexus.resourcefulbees.com/repository/maven-public/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	modImplementation "dev.upcraft.sparkweave:Sparkweave-Fabric:${project.sparkweave_version}"
	modImplementation "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.21:${project.resourceful_config_version}"
}

loom {
	accessWidenerPath.set(project.file("src/main/resources/witchsblights.accesswidener"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE.md") {
		rename { "LICENSE_${archivesBaseName}.md" }
	}

	manifest.mainAttributes(
			"Implementation-Title": project.archivesBaseName,
			"Implementation-Version": project.version,
			"Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}".toLowerCase(Locale.ROOT),
			"Built-On-Minecraft": project.minecraft_version,
			"Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
	)
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId "Witchs-Blights"
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_UPLOAD_URL) {
			maven {
				url = ENV.MAVEN_UPLOAD_URL
				credentials {
					username = ENV.MAVEN_UPLOAD_USERNAME
					password = ENV.MAVEN_UPLOAD_PASSWORD
				}
			}
		}
	}
}